{"version":3,"sources":["components/ButtonNavbarCollapse.js","components/NavbarCollapse.js","containers/Navbar.js","services/GqlServices.js","components/PokemonsList.js","containers/PokemonsContainer.js","pages/Home.js","pages/Pokebag.js","services/RestServices.js","helpers/typeColors.js","components/PokemonDetailList.js","containers/PokemonDetailContainer.js","pages/PokemonDetail.js","App.js","reportWebVitals.js","index.js"],"names":["WhiteButton","withStyles","root","color","IconButton","ButtonAppBarCollapse","props","handleMenu","event","setState","anchorEl","currentTarget","handleClose","state","bind","classes","this","open","Boolean","className","buttonCollapse","onClick","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","children","React","Component","theme","breakpoints","up","display","position","right","buttonBar","down","link","alignItems","textDecoration","padding","height","MenuItem","to","Button","Navbar","useState","navbar","setNavbar","window","addEventListener","scrollY","CustomTypography","Typography","Fragment","AppBar","elevation","Toolbar","disableGutters","Container","maxWidth","Grid","container","direction","justify","item","xs","variant","component","noWrap","Box","fontWeight","ml","mt","mb","Hidden","xsDown","smUp","GET_POKEMONS","gql","useStyles","makeStyles","flexGrow","actionArea","borderRadius","transition","transform","media","width","paddingBottom","backgroundColor","card","boxShadow","Color","rotate","darken","fade","content","textAlign","title","fontSize","textTransform","subtitle","opacity","marginTop","contentTag","bottom","zIndex","tag","marginBottom","float","CustomCard","image","name","loading","CardActionArea","NavLink","Card","Skeleton","animation","CardMedia","slice","length","style","CardContent","PokemonList","memo","pokemons","onLoadMore","Styles","colors","spacing","zeroMinWidth","results","map","x","i","sm","md","lg","src","data","vibrant","Object","values","JSON","parse","localStorage","getItem","filter","ele","pokeName","charAt","toUpperCase","onEnter","PokemonsContainer","useQuery","variables","limit","notifyOnNetworkStatusChange","listPokemonError","error","listPokemonLoading","listPokemondata","listPokemonFetch","fetchMore","listPokemonNetwork","networkStatus","offset","updateQuery","prev","fetchMoreResult","__typename","isLoading","CircularProgress","ScrollTop","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Home","forEach","k","removeItem","mdDown","css","only","Fab","size","aria-label","Transition","forwardRef","ref","Slide","dialogStyle","dialogRoot","CustomButton","bgcolor","palette","getContrastText","Pokebag","setOpen","selectedPokemon","setSelectedPokemon","useReducer","forceUpdate","addColor","useEffect","my","Divider","key","img","listId","nickName","Dialog","fullWidth","paper","TransitionComponent","keepMounted","DialogTitle","pt","align","DialogContent","Paper","alt","DialogActions","pb","alignContent","date","xl","mx","blue","red","confirm","setItem","stringify","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","typeLabelColors","bug","dragon","fairy","fire","ghost","ground","normal","psychic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","unknown","PokemonAbilityContainer","abilityURL","abilityData","setAbilityData","isSubscribed","a","fetchData","effect_entries","language","effect","PokemonDetailList","pokemon","useParams","typoTheme","responsiveFontSizes","createMuiTheme","updated","setUpdated","types","type","sprites","other","front_default","sort","b","Date","Chip","label","abilities","ability","disableHeight","headerHeight","rowHeight","rowStyle","rowCount","moves","rowGetter","index","moves_detail","dataKey","headerRenderer","cellRenderer","rowData","damage_class","PokemonDetailContainer","setIsSubscribed","pokemonData","setPokemonData","initialURL","loadPokemonMoves","all","move","pokemonRecord","_pokemonData","imgButton","value","yellow","disabled","PokemonDetail","open1","setOpen1","openFailed","setOpenFailed","openSuccess","setOpenSuccess","isActive","setActive","btnDisabled","setBtnDisabled","inputRef","useRef","pokeObj","inventory","setInventory","_","timestamp","now","Intl","DateTimeFormat","day","month","year","hour","minute","hour12","format","handleClose1","setTimeout","disableScroll","on","Math","random","off","active","spinner","text","disableEscapeKeyDown","disableBackdropClick","green","TextField","placeholder","onChange","InputLabelProps","shrink","current","concat","primary","main","secondary","App","client","ApolloClient","uri","ThemeProvider","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0efaf113.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Menu } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst styles = theme => ({\r\n  buttonCollapse: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    margin: \"10px\",\r\n    boxShadow: \"none\"\r\n  }\r\n});\r\nconst WhiteButton = withStyles(() => ({\r\n    root: {\r\n      color: \"#FFFFFF\",\r\n    },\r\n  }))(IconButton);\r\n\r\nclass ButtonAppBarCollapse extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null\r\n    };\r\n    this.handleMenu = this.handleMenu.bind(this);\r\n  }\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.buttonCollapse}>\r\n        <WhiteButton onClick={this.handleMenu}>\r\n          <MoreVertIcon />\r\n        </WhiteButton>\r\n        <Menu\r\n          id=\"menu-appbar\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          open={open}\r\n          onClose={this.handleClose}\r\n          onClick={this.handleClose}\r\n        >\r\n          {this.props.children}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(ButtonAppBarCollapse);\r\n","\r\nimport React from \"react\";\r\nimport { Button, MenuItem } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ButtonAppBarCollapse from \"./ButtonNavbarCollapse\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"absolute\",\r\n    right: 0\r\n  },\r\n  buttonBar: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    },\r\n    margin: \"10px\",\r\n    paddingLeft: \"16px\",\r\n    right: 0,\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    background: \"transparent\"\r\n  },\r\n  link: {\r\n    color: \"#00478C\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n    padding: \"0.5rem 1rem\",\r\n    height: \"100%\"\r\n  }\r\n});\r\n\r\n\r\nconst NavBarCollapse = props => (\r\n  <div className={props.classes.root}>\r\n    <ButtonAppBarCollapse>\r\n      <MenuItem><NavLink className={props.classes.link} to=\"/tokopedia-test/\">Pokémon List</NavLink></MenuItem>\r\n      <MenuItem><NavLink className={props.classes.link} to=\"/tokopedia-test/pokebag\">My Pokébag</NavLink></MenuItem>\r\n    </ButtonAppBarCollapse>\r\n    <div className={props.classes.buttonBar} id=\"appbar-collapse\">\r\n      <Button><NavLink className={props.classes.link} to=\"/tokopedia-test/\">Pokémon List</NavLink></Button>\r\n      <Button><NavLink className={props.classes.link} to=\"/tokopedia-test/pokebag\">My Pokébag</NavLink></Button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(NavBarCollapse);\r\n","import React, {useState} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport NavBarCollapse from \"../components/NavbarCollapse\";\r\n\r\n\r\nexport default function Navbar() {\r\n    const [navbar, setNavbar] = useState(false);\r\n    const changeBackground = () => {\r\n        if (window.scrollY >= 300) {\r\n            setNavbar(true);\r\n        } else {\r\n            setNavbar(false);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', changeBackground);\r\n    \r\n    const CustomTypography = withStyles({\r\n        root: {\r\n            color: \"#00478C\"\r\n        }\r\n    })(Typography);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"sticky\" color={\r\n                    'primary'\r\n                }\r\n                elevation={\r\n                    !navbar ? 0 : 2\r\n            }>\r\n                <Toolbar disableGutters={true}>\r\n                    <Container maxWidth={'xl'}>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                            <Grid item\r\n                                xs={11}>\r\n                                <CustomTypography variant=\"h4\" component=\"div\" noWrap>\r\n                                    <Box fontWeight=\"fontWeightBold\"\r\n                                        ml={2}\r\n                                        mt={3}>\r\n                                        Pokéble\r\n                                    </Box>\r\n                                </CustomTypography>\r\n\r\n                                <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                                    <Grid item>\r\n                                        <CustomTypography variant={\"subtitle1\"}\r\n                                            noWrap>\r\n                                            <Box ml={2}\r\n                                                mb={2}>\r\n                                                <Hidden xsDown>\r\n                                                    Kiblatnya Pokémon anak Indonesia\r\n                                                </Hidden>\r\n                                            </Box>\r\n                                        </CustomTypography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item\r\n                                xs={1}>\r\n                                <Hidden xsDown>\r\n                                    <Box ml={2}\r\n                                        mt={3}>\r\n                                        <NavBarCollapse/>\r\n                                    </Box>\r\n                                </Hidden>\r\n                                <Hidden smUp>\r\n                                    <Box ml={2}\r\n                                        mt={1}>\r\n                                        <NavBarCollapse/>\r\n                                    </Box>\r\n                                </Hidden>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\n\r\nexport const GET_POKEMONS = gql`\r\n    query pokemons($limit: Int, $offset: Int){\r\n        pokemons(limit: $limit, offset: $offset){\r\n            results{\r\n                id\r\n                name\r\n                image\r\n                url\r\n            }            \r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_POKEMON = gql`\r\n    query pokemon($name: String!){\r\n        pokemon(name: $name) {\r\n            sprites{\r\n                front_default\r\n            }            \r\n            moves {\r\n                move {\r\n                    name\r\n                    url\r\n                }\r\n            }\r\n            types {\r\n                slot\r\n                type {\r\n                    name \r\n                    url\r\n                }\r\n            }            \r\n        }\r\n    }\r\n`","import React from \"react\";\r\nimport Color from 'color';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Waypoint} from \"react-waypoint\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {Palette} from \"react-palette\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    actionArea: {\r\n      borderRadius: 16,\r\n      transition: '0.2s',\r\n      '&:hover': {\r\n        transform: 'scale(1.1)',\r\n      },\r\n    },\r\n    media: ({color}) => ({\r\n      width: '100%',\r\n      height: 0,\r\n      paddingBottom: '100%',\r\n      backgroundColor: color\r\n    }),\r\n    card: ({ color }) => ({\r\n      borderRadius: 16,\r\n      '&:hover': {\r\n        boxShadow: `0 6px 12px 0 ${Color(color)\r\n          .rotate(-12)\r\n          .darken(0.2)\r\n          .fade(0.5)}`,\r\n      },\r\n    }),\r\n    content: {\r\n        textAlign: 'center'\r\n    },\r\n    title: {\r\n      fontSize: '1.1rem',\r\n      fontWeight: 900,\r\n      color: '#000',\r\n      textTransform: 'capitalize',\r\n    },\r\n    subtitle: {\r\n      color: '#000',\r\n      opacity: 0.87,\r\n      marginTop: '0.5rem',\r\n      fontWeight: 500,\r\n      fontSize: 14,\r\n    },  \r\n    contentTag: {\r\n      position: 'flex',\r\n      bottom: 0,\r\n      width: '100%',\r\n      zIndex: 1,\r\n      padding: '1rem 0.5rem',\r\n    },\r\n    tag: ({color}) => ( {\r\n      display: 'inline-block',\r\n      backgroundColor: color,\r\n      borderRadius: '0.5rem',\r\n      padding: '2px 0.5rem',\r\n      color: '#fff',\r\n      marginBottom: '0.5rem',\r\n      fontWeight: \"bold\",\r\n      fontSize: 18,\r\n      float: 'right'\r\n    }),\r\n  \r\n}));\r\n\r\nconst CustomCard = ({ classes, image, title, subtitle, id, name, loading }) => {\r\n\r\n  return (\r\n    <CardActionArea className={classes.actionArea} component={NavLink} to={\"/tokopedia-test/detail/\"+id+\"/\"+name}>\r\n      <Card className={classes.card} >\r\n      {loading ? (<Skeleton animation=\"wave\" variant=\"rect\"/>) : \r\n      (<CardMedia className={classes.media} image={image}>\r\n            <div className={classes.contentTag}>\r\n        <div className={classes.tag}>{(('0000') + id).slice(-('0000').length)}</div>\r\n      </div>\r\n      </CardMedia>)}\r\n    {\r\n    loading ? (\r\n        <React.Fragment>\r\n            <Skeleton animation=\"wave\"\r\n                height={10}\r\n                style={\r\n                    {marginBottom: 6}\r\n                }/>\r\n            <Skeleton animation=\"wave\"\r\n                height={10}\r\n                style={\r\n                {marginBottom: 6}\r\n            }/>\r\n        </React.Fragment>\r\n    ) : (\r\n        <CardContent className={classes.content} >\r\n          <Typography className={classes.title} variant={'h2'} noWrap>\r\n            {title}\r\n          </Typography>\r\n          <Typography className={classes.subtitle}>{subtitle}</Typography>\r\n        </CardContent>)}\r\n      </Card>\r\n    </CardActionArea>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const PokemonList = React.memo(function PokemonLists({pokemons, onLoadMore, loading}){\r\n  const Styles = (colors) => useStyles({color: colors});\r\n  return(\r\n  <div>\r\n  <Grid container\r\n      className={\r\n        Styles.root\r\n      }\r\n      spacing={2}>\r\n      <Grid item\r\n          xs={12} zeroMinWidth>\r\n          <Grid container justify=\"center\"\r\n              spacing={4}>\r\n              {\r\n              pokemons.results.map((x, i) => (\r\n                  <Grid key={\r\n                          x.id\r\n                      }\r\n                      item\r\n                      xs={8}\r\n                      sm={4}\r\n                      md={3}\r\n                      lg={2} >\r\n                      <Palette src={x.image}>\r\n                          {({data}) => (\r\n                            <CustomCard\r\n                            id={x.id}\r\n                            name={x.name}\r\n                            loading = {loading}\r\n                            classes={Styles(data.vibrant)}\r\n                            title={x.name}\r\n                            subtitle={\"Owned : \" + Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).filter(ele => ele.pokeName === x.name.charAt(0).toUpperCase() + x.name.slice(1)\r\n                            ).length}\r\n                            image={x.image}\r\n                        />              \r\n                          )}\r\n                        </Palette>\r\n                      {\r\n                      i === pokemons.results.length - 10 && (\r\n                          <Waypoint onEnter={\r\n                              () => onLoadMore()\r\n                          }/>\r\n                      )\r\n                  } \r\n                  </Grid>\r\n              ))} \r\n              </Grid>\r\n      </Grid>\r\n  </Grid>\r\n</div>\r\n  )\r\n}) \r\n\r\nexport default PokemonList;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_POKEMONS } from \"../services/GqlServices\";\r\nimport PokemonList from \"../components/PokemonsList\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport function PokemonsContainer() {\r\n    const { error: listPokemonError, loading: listPokemonLoading, data: listPokemondata, fetchMore: listPokemonFetch, networkStatus: listPokemonNetwork } = useQuery(GET_POKEMONS, {\r\n      variables: { limit: 19 },\r\n      notifyOnNetworkStatusChange: true\r\n    });\r\n    if(listPokemonError) return <div>errors</div>;\r\n    if(!listPokemondata) return <CircularProgress />\r\n\r\n\r\n    return (\r\n        <div>\r\n            {listPokemondata.pokemons.results && (\r\n            <PokemonList \r\n                loading = {listPokemonLoading}\r\n                pokemons={listPokemondata.pokemons || []} \r\n                onLoadMore= {() => \r\n                    listPokemonFetch({\r\n                        variables: {\r\n                            limit: 19,\r\n                            offset: listPokemondata.pokemons.results.length + 1\r\n                        },\r\n                        updateQuery: (prev, {fetchMoreResult}) => {\r\n                            if(!fetchMoreResult) return prev;\r\n                            return {\r\n                                pokemons: {\r\n                                    __typename: \"PokemonList\",\r\n                                    isLoading: true,\r\n                                    results: [...prev.pokemons.results, ...fetchMoreResult.pokemons.results]\r\n                                }\r\n                            }\r\n                        }\r\n                    })}/>\r\n                    )}\r\n                    \r\n                    {listPokemonNetwork === 3 && <CircularProgress />}\r\n        </div>\r\n        \r\n    )\r\n}\r\n","/*eslint-disable no-unused-vars*/\r\nimport React from 'react';\r\n /*eslint-enable no-unused-vars*/\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport {PokemonsContainer} from \"../containers/PokemonsContainer\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Container from '@material-ui/core/Container';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport {css, jsx} from '@emotion/react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n    const {children, window} = props;\r\n    const classes = useStyles();\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick}\r\n                role=\"presentation\"\r\n                className={\r\n                    classes.root\r\n            }>\r\n                {children} </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nfunction Home(props) {\r\n    let clearKeys = [\"pokeImg\", \"pokeName\", \"id\"]\r\n    return (\r\n        <>\r\n        {clearKeys.forEach(k =>localStorage.removeItem(k))}\r\n        <Hidden mdDown>\r\n            <div css={\r\n                css `\r\n                    background: url('/tokopedia-test/img/home.png') center center/cover no-repeat;\r\n                    height: 90vh;\r\n                    width: 100%;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    object-fit: contain;\r\n                    `\r\n            }></div>\r\n            </Hidden>\r\n\r\n            <Hidden only={['lg', 'xl', 'xs']}>\r\n            <div css={\r\n                css `\r\n                    background: url('/tokopedia-test/img/home-md.png') center center/cover no-repeat;\r\n                    height: 110vh;\r\n                    width: 100%;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    object-fit: contain;\r\n                    `\r\n            }></div>\r\n            </Hidden>\r\n            \r\n            \r\n            <Hidden smUp>\r\n            <div css={\r\n                css `\r\n                    background: url('/tokopedia-test/img/home-xs.png') center center/cover no-repeat;\r\n                    height: 80vh;\r\n                    width: 100%;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    object-fit: contain;\r\n                    `\r\n            }></div>\r\n            </Hidden>\r\n            <Toolbar id=\"back-to-top-anchor\"/>\r\n            <Container maxWidth={'xl'}>\r\n                <PokemonsContainer/>\r\n            </Container>\r\n            <ScrollTop {...props}>\r\n                <Fab color=\"secondary\" size=\"large\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon/>\r\n                </Fab>\r\n            </ScrollTop>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport {Container, Box, Divider, Button, Paper } from \"@material-ui/core\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Color from \"color\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Palette } from \"react-palette\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport {css, jsx} from '@emotion/react';\r\nimport { blue, red} from '@material-ui/core/colors';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  actionArea: {\r\n    borderRadius: 16,\r\n    transition: \"0.2s\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.1)\",\r\n    },\r\n  },\r\n  media: ({ color }) => ({\r\n    width: \"100%\",\r\n    height: 0,\r\n    paddingBottom: \"100%\",\r\n    backgroundColor: color,\r\n  }),\r\n  card: ({ color }) => ({\r\n    borderRadius: 16,\r\n    \"&:hover\": {\r\n      boxShadow: `0 6px 12px 0 ${Color(color)\r\n        .rotate(-12)\r\n        .darken(0.2)\r\n        .fade(0.5)}`,\r\n    },\r\n  }),\r\n  content: {\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: \"1.1rem\",\r\n    fontWeight: 900,\r\n    color: \"#000\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n  subtitle: {\r\n    color: \"#000\",\r\n    opacity: 0.87,\r\n    marginTop: \"0.5rem\",\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n  },\r\n  contentTag: {\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    zIndex: 1,\r\n    padding: \"1rem 0.5rem\",\r\n  },\r\n  tag: ({ color }) => ({\r\n    display: \"inline-block\",\r\n    backgroundColor: color,\r\n    borderRadius: \"0.5rem\",\r\n    padding: \"2px 0.5rem\",\r\n    color: \"#fff\",\r\n    marginBottom: \"0.5rem\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n    float: 'right'\r\n  })\r\n}));\r\n\r\nconst dialogStyle = makeStyles(()=>({\r\n  dialogRoot:{\r\n    borderRadius: '2rem'\r\n  }\r\n}))\r\n\r\nconst CustomButton = withStyles((theme) => ({\r\n    root: ({colors, bgcolor, width}) => ({\r\n      color: theme.palette.getContrastText(colors),\r\n      backgroundColor: colors,\r\n      '&:hover': {\r\n        backgroundColor: bgcolor[600],\r\n      },\r\n      borderRadius: '2rem',\r\n      fontSize: '0.3em',\r\n      height: 30,\r\n      width: width,\r\n    }),\r\n  }))(Button);\r\n\r\n\r\n\r\nexport const Pokebag = React.memo(function Pokebag() {\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedPokemon, setSelectedPokemon] = useState({});\r\n    /*eslint-disable no-unused-vars*/\r\n    const [_, forceUpdate] = useReducer((x) => x + 1, 0);\r\n    /*eslint-enable no-unused-vars*/\r\n    let addColor = {}\r\n    const handleOpen = (id, color) => {\r\n        setOpen(!open);\r\n        addColor = Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).map((x) => {\r\n            return {\r\n                ...x,\r\n                listId: id,\r\n                color: color\r\n            }\r\n        })\r\n        setSelectedPokemon(addColor[id]);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const releasePokemon = (id) => {\r\n        localStorage.setItem(\"inventory\", JSON.stringify(Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).filter(function (x, i) {return i!==id} )));\r\n        setOpen(false);\r\n        forceUpdate();\r\n    }\r\n    useEffect(() => {\r\n    }, [])\r\n  const Styles = (colors) => useStyles({ color: colors });\r\n  const classes = dialogStyle();\r\n  let clearKeys = [\"pokeImg\", \"pokeName\", \"id\"];\r\n  return (\r\n    <>\r\n      {clearKeys.forEach((k) => localStorage.removeItem(k))}\r\n      <Container maxWidth={\"xl\"}>\r\n        <Grid container className={Styles.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n                        <Box mt={5}>\r\n                            <Typography variant=\"h4\">\r\n                                My Pokebag content\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box my={3}>\r\n                        <Divider variant=\"middle\" />\r\n                        </Box>\r\n                        </Grid>\r\n          <Grid item xs={12} zeroMinWidth>\r\n            <Grid container justify=\"center\" spacing={4}>\r\n              {Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).map(\r\n                (x, i) => (\r\n                  <Grid key={i} item xs={8} sm={4} md={3} lg={2}>\r\n                    <Palette src={x.img}>\r\n                      {({ data }) => (\r\n                          <>\r\n                            <CardActionArea\r\n                            className={Styles(data.vibrant).actionArea} onClick={() => handleOpen(i, data.vibrant)}>\r\n                            <Card className={Styles(data.vibrant).card}>\r\n                                <CardMedia className={Styles(data.vibrant).media} image={x.img}>\r\n                                    <div className={Styles(data.vibrant).contentTag}>\r\n                                    <div className={Styles(data.vibrant).tag}>\r\n                                        {(\"0000\" + x.id).slice(-\"0000\".length)}\r\n                                    </div>\r\n                                    </div>\r\n                                </CardMedia>\r\n                                <CardContent className={Styles(data.vibrant).content}>\r\n                                    <Typography className={Styles(data.vibrant).title} variant={\"h2\"} noWrap>\r\n                                    {x.pokeName}\r\n                                    </Typography>\r\n                                    <Typography className={Styles(data.vibrant).subtitle}>{x.nickName}</Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                            </CardActionArea>                        \r\n                        </>\r\n                      )}\r\n                    </Palette>\r\n                  </Grid>\r\n                )\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog\r\n    fullWidth={true}\r\n      classes={{paper: classes.dialogRoot}}\r\n      open={open}  \r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}>\r\n      <DialogTitle css={css`background: ${selectedPokemon.color}`}>\r\n        <Box pt={1}>\r\n      <Typography variant=\"h5\" align=\"right\" css={css`color: #fff; font-weight: 600`}>\r\n      {(\"0000\" + selectedPokemon.id).slice(-\"0000\".length)}\r\n      </Typography>\r\n      </Box>\r\n      </DialogTitle>\r\n      <DialogContent css={css`background: ${selectedPokemon.color}`}>\r\n        <Paper\r\n          elevation={0}\r\n          css={css`\r\n            text-align: center;\r\n            border-radius: 2rem;\r\n            background: ${selectedPokemon.color};\r\n            `}>\r\n          <img\r\n          alt=\"high-res-poke-img\"\r\n            src={selectedPokemon.img}\r\n            css={css`\r\n              width: 150px;\r\n              height: 150px;    \r\n              -webkit-filter: drop-shadow(5px 5px 7px rgba(0, 0, 0, 0.5));\r\n              filter: drop-shadow(5px 5px 7px rgba(0, 0, 0, 0.5));\r\n            `}\r\n          />\r\n        </Paper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n          <Box pb={4}>\r\n        <Grid container direction=\"row\" alignContent=\"center\" justify=\"center\">\r\n            <Grid item xs={12}>\r\n        <Box pt={1} ml={2}>\r\n        <Typography variant=\"body1\" align=\"left\">\r\n            Original name: <strong>{selectedPokemon.pokeName}</strong>\r\n        </Typography>\r\n        </Box>\r\n        </Grid>\r\n            <Grid item xs={12}>\r\n        <Box pt={1} ml={2}>\r\n        <Typography variant=\"h4\" align=\"left\">\r\n            <strong>{selectedPokemon.nickName}</strong>\r\n        </Typography>\r\n        </Box>\r\n        </Grid>\r\n            <Grid item xs={12}>\r\n        <Box ml={2}>\r\n        <Typography variant=\"body2\" align=\"left\">\r\n            Catched on: {selectedPokemon.date}\r\n        </Typography>\r\n        </Box>\r\n        </Grid>\r\n            <Grid item xs={11} sm={7} md={7} lg={7} xl={7}>\r\n        <Box mx={1} pt={3} >\r\n            <CustomButton colors=\"#00478C\" bgcolor={blue} width={\"-webkit-fill-available\"} component={NavLink} to={\"/tokopedia-test/detail/\"+selectedPokemon.id+\"/\"+selectedPokemon.pokeName}>\r\n            <Typography css={css`\r\n                      display: flex;\r\n                      align-items: center;\r\n                      flex-wrap: wrap;\r\n                      text-transform: capitalize`}>\r\n                See detail <ArrowRightAltIcon css={css`margin-left: 0.4em`}/>\r\n            </Typography>\r\n            </CustomButton>\r\n            </Box>\r\n            </Grid>\r\n            <Grid item xs={11} sm={5} md={5} lg={5} xl={5}>\r\n            <Box mx={1} pt={3} >\r\n            <CustomButton colors=\"#DB2E2E\" bgcolor={red} width={\"-webkit-fill-available\"} onClick={() => {window.confirm('Sure to release this pokemon?') && releasePokemon(selectedPokemon.listId)}}>\r\n            <Typography css={css`\r\n                      display: flex;\r\n                      align-items: center;\r\n                      flex-wrap: wrap;\r\n                      text-transform: capitalize`}>\r\n                Release\r\n            </Typography>\r\n            </CustomButton>\r\n            </Box>\r\n            </Grid>\r\n        </Grid>\r\n        </Box>\r\n      </DialogActions>\r\n      <Grid container direction=\"row\" alignContent=\"center\" justify=\"flex-start\">\r\n        </Grid>\r\n    </Dialog>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n)\r\n\r\nexport default Pokebag;\r\n","export function getPokemon( url ) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n","const typeLabelColors = {\r\n    bug: '#BB8100',\r\n    dragon: '#BB0164',\r\n    fairy: '#5AD292',\r\n    fire: '#DB2E2E',\r\n    ghost: '#404040',\r\n    ground: '#AF9449',\r\n    normal: '#B9B9B9',\r\n    psychic: '#DC9B01',\r\n    steel: '#ACAA99',\r\n    dark: '#303346',\r\n    electric: '#DCBE05',\r\n    fighting: '#3A04A8',\r\n    flying: '#24BCB2',\r\n    grass: '#17B441',\r\n    ice: '#35B9E3',\r\n    poison: '#8E49AF',\r\n    rock: '#6A665D',\r\n    water: '#3575E3',\r\n    unknown: '#B0B89E'\r\n}\r\nconst typeBgColors = {\r\n    bug: '#CF9F34',\r\n    dragon: '#CF2C83',\r\n    fairy: '#71ECAA',\r\n    fire: '#FB6444',\r\n    ghost: '#606060',\r\n    ground: '#DBC076',\r\n    normal: '#E5E5E5',\r\n    psychic: '#E3B23E',\r\n    steel: '#CBC8B6',\r\n    dark: '#3D4153',\r\n    electric: '#FEE54F',\r\n    fighting: '#5F2FBE',\r\n    flying: '#8AD5D0',\r\n    grass: '#34D55F',\r\n    ice: '#91E5FF',\r\n    poison: '#B171CF',\r\n    rock: '#85837C',\r\n    water: '#46B8DB',\r\n    unknown: '#B0B89E'\r\n}\r\n\r\n\r\nexport {typeLabelColors, typeBgColors};","import React, { useState, useEffect }from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n  Box,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\n/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { css, jsx, ThemeProvider } from \"@emotion/react\";\r\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { typeLabelColors } from \"../helpers/typeColors\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { getPokemon } from \"../services/RestServices\";\r\nimport {AutoSizer, Column, Table} from 'react-virtualized';\r\nimport 'react-virtualized/styles.css';\r\n\r\nfunction PokemonAbilityContainer({abilityURL}) {\r\n  const [abilityData, setAbilityData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n      async function fetchData() {\r\n        return await getPokemon(abilityURL);\r\n      }\r\n      fetchData().then( x => {\r\n        if(isSubscribed){     \r\n            setAbilityData(x);\r\n        }\r\n    })\r\n      \r\n      return () => isSubscribed = false\r\n         // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [localStorage.getItem(\"inventory\"), abilityURL])\r\n\r\n\r\n  return (\r\n    <>\r\n      {abilityData !== null ? (\r\n        <>\r\n        {abilityData.effect_entries.map((x,i) => \r\n          <Typography variant=\"body1\" key={i} align=\"justify\">\r\n              {x.language.name === \"en\" && x.effect}\r\n           </Typography>\r\n        )}\r\n        </>\r\n      ) : <CircularProgress />}\r\n    </>\r\n      \r\n  )\r\n}\r\n\r\nexport const PokemonDetailList = React.memo(function PokemonDetail({pokemon, forceUpdate}) {\r\n  let { id, name } = useParams();\r\n  let typoTheme = responsiveFontSizes(createMuiTheme());\r\n  const [updated, setUpdated] = useState(0);\r\n  useEffect(()=>{\r\n    setUpdated(forceUpdate);   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[updated, forceUpdate])\r\n  return (\r\n    <>\r\n    {localStorage.setItem(\"pokeName\", name.charAt(0).toUpperCase() + name.slice(1))}\r\n    {localStorage.setItem(\"id\", id)}\r\n      <Container maxWidth={\"xl\"}>\r\n      <Box>\r\n              <Typography\r\n                variant=\"h4\" component={'span'}\r\n                css={css`\r\n                  font-weight: 600;\r\n                  opacity: 0.37;\r\n                  display: inline;\r\n                `}\r\n              >\r\n                {(\"0000\" + id).slice(-\"0000\".length)}\r\n              </Typography>\r\n\r\n              <Typography\r\n                variant=\"h4\"\r\n                css={css`\r\n                  font-weight: 600;\r\n                  display: inline;\r\n                  margin-left: 1rem;\r\n                `}\r\n              >\r\n                {name.charAt(0).toUpperCase() + name.slice(1)}\r\n              </Typography>\r\n            </Box>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          spacing={4}>\r\n          <Grid item xs={12} sm={12} md={6} xl={6}>\r\n            <Box mt={3}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"stretch\"\r\n              >\r\n                <Grid item xs={12} sm={12}>\r\n                  <Paper\r\n                    elevation={1}\r\n                    css={css`\r\n                      text-align: center;\r\n                      border-radius: 2rem;\r\n                      background: radial-gradient(circle, ${typeLabelColors[pokemon.types[0].type.name]} 15%, ${pokemon.types.length > 1 ? typeLabelColors[pokemon.types[1].type.name] : typeLabelColors[pokemon.types[0].type.name]} 100%);\r\n                    `}\r\n                  >\r\n                    {localStorage.setItem(\"pokeImg\", pokemon.sprites.other[\"official-artwork\"].front_default)}\r\n                    <img\r\n                    alt=\"high-res-poke-img\"\r\n                      src={\r\n                        pokemon.sprites.other[\"official-artwork\"].front_default\r\n                      }\r\n                      css={css`\r\n                        width: 250px;\r\n                        height: 250px;    \r\n                        -webkit-filter: drop-shadow(5px 5px 7px rgba(0, 0, 0, 0.5));\r\n                        filter: drop-shadow(5px 5px 7px rgba(0, 0, 0, 0.5));\r\n                      `}\r\n                    />\r\n                  </Paper>\r\n                </Grid>\r\n                <Box mt={3}>\r\n                  <Grid item xs={12} css={css`\r\n                      display: flex;\r\n                      align-items: center;\r\n                      flex-wrap: wrap;\r\n                    `}>\r\n                  {Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).filter(ele => ele.pokeName === name.charAt(0).toUpperCase() + name.slice(1)\r\n                        ).length > 0 ? (\r\n                          <>\r\n                          \r\n                    <CheckCircleIcon\r\n                      fontSize=\"large\"\r\n                      css={css`\r\n                        color: #2f79d9;\r\n                        display: inline;\r\n                        margin-right: 0.5rem;\r\n                      `}\r\n                    />\r\n                    <ThemeProvider theme={typoTheme}>\r\n                      <Typography\r\n                        variant=\"h4\"\r\n                        css={css`\r\n                          display: inline;\r\n                        `}>\r\n                        {Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).filter(ele => ele.pokeName === name.charAt(0).toUpperCase() + name.slice(1)\r\n                        ).length} in Pokebag\r\n                      </Typography>\r\n                    </ThemeProvider>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                          <RemoveCircleIcon\r\n                          fontSize=\"large\"\r\n                          css={css`\r\n                          color: #9ea9b1;\r\n                            display: inline;\r\n                            margin-right: 0.5rem;\r\n                          `} />\r\n                    <ThemeProvider theme={typoTheme}>\r\n                      <Typography\r\n                        variant=\"h4\"\r\n                        css={css`\r\n                        color: #9ea9b1;\r\n                          display: inline;\r\n                        `}>\r\n                          You have none\r\n                      </Typography>\r\n                    </ThemeProvider>                          \r\n                          </>\r\n                        )}\r\n                  </Grid>\r\n                </Box>\r\n                <Box mt={1}>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    css={css`\r\n                      display: flex;\r\n                      align-items: center;\r\n                      flex-wrap: wrap;\r\n                    `}\r\n                  >\r\n                    <HistoryIcon\r\n                      css={css`\r\n                        margin-right: 0.5rem;\r\n                      `}\r\n                    />\r\n                    <ThemeProvider theme={typoTheme}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        css={css`\r\n                          margin-right: 0.5rem;\r\n                        `}\r\n                      >\r\n                        Last Catch:\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        css={css`\r\n                          opacity: 0.7;\r\n                        `}\r\n                      >\r\n                  {Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).filter(ele => ele.pokeName === name.charAt(0).toUpperCase() + name.slice(1)).length > 0 ? (\r\n                          <>\r\n                          {Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).sort((a,b) => {return new Date(b.date) - new Date(a.date)}).filter(ele => ele.pokeName === name.charAt(0).toUpperCase() + name.slice(1))[0].date}\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                          N/A\r\n                          </>\r\n                        )}      \r\n                      </Typography>\r\n                    </ThemeProvider>\r\n                  </Grid>\r\n                </Box>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} xl={6}>\r\n          <Box mt={3}>\r\n              <Typography\r\n                variant=\"h4\"\r\n                css={css`\r\n                  font-weight: 600;\r\n                  display: inline;\r\n                `}\r\n              >\r\n                Type\r\n              </Typography>\r\n            </Box>\r\n            <Box mt={1}>\r\n                {pokemon.types.map((x,i) => \r\n                    <Chip key={i} component={Typography} label={x.type.name.charAt(0).toUpperCase() + x.type.name.slice(1)} \r\n                    css={css`color: white; margin-right: 0.4rem; font-size: 1em; background-color: ${typeLabelColors[x.type.name]}`}/>\r\n                )}                \r\n            </Box>\r\n\r\n            <Box mt={5}>\r\n              <Typography\r\n                variant=\"h4\"\r\n                css={css`\r\n                  font-weight: 600;\r\n                  display: inline;\r\n                `}\r\n              >\r\n                Abilities & Skills\r\n              </Typography>\r\n            </Box>         \r\n\r\n            {pokemon.abilities.map((x,i) =>\r\n            <>\r\n            <Box mt={1} key={i} css={css`\r\n                      display: flex;\r\n                      align-items: center;\r\n                      flex-wrap: wrap;`}>\r\n              <OfflineBoltIcon css={css`margin-right: 0.5rem; color: #2f79d9;`}/>\r\n              <Typography variant=\"h6\" css={css`font-style: italic; font-weight: 600`}>\r\n                  {x.ability.name.charAt(0).toUpperCase() + x.ability.name.slice(1)}\r\n              </Typography>\r\n            </Box>\r\n            \r\n            <Box ml={4}>\r\n                <PokemonAbilityContainer abilityURL={x.ability.url} />\r\n            </Box>   \r\n            </>\r\n            )}\r\n            \r\n            <Box my={2}>\r\n                    <NavLink to=\"/tokopedia-test/pokebag\">\r\n                      <Typography\r\n                        css={css`\r\n                          font-weight: 600;\r\n                          display: flex;\r\n                          flex-wrap: wrap;\r\n                          float: right;\r\n                        `}\r\n                      >\r\n                        Check My {name.charAt(0).toUpperCase() + name.slice(1)}{\" \"}\r\n                        <ChevronRightIcon />\r\n                      </Typography>\r\n                    </NavLink>\r\n                  </Box>                   \r\n          </Grid>\r\n        </Grid>\r\n        <Box my={3}>\r\n        <Divider variant=\"middle\" />\r\n        </Box>\r\n        <Box mt={2}>\r\n          \r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\">\r\n            <Grid item xs={12}>\r\n            <Box mt={1}>\r\n              <Typography\r\n                variant=\"h4\"\r\n                css={css`\r\n                  font-weight: 600;\r\n                  display: inline;\r\n                `}>\r\n                Moves\r\n              </Typography>\r\n            </Box>         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n  <Box mt={2}>\r\n    <AutoSizer disableHeight>\r\n      {({width}) => (\r\n\r\n<Table     \r\n  width={width}\r\n  height={300}\r\n  headerHeight={40}\r\n  rowHeight={50}\r\n  rowStyle={{alignItems: \"stretch\"}}\r\n  rowCount={pokemon.moves.length}\r\n  rowGetter={({index}) => pokemon.moves_detail[index]}>\r\n    <Column flexGrow={1} label=\"Name\" width={50} dataKey=\"name\" headerRenderer={({label}) => <Typography css={css`font-weight: 600;`}>{label}</Typography>} cellRenderer={({rowData})=> <Typography variant=\"caption\">{rowData.name.charAt(0).toUpperCase() + rowData.name.slice(1)}</Typography>}/>\r\n    <Column flexGrow={1} label=\"Class\" width={50} dataKey=\"class\" headerRenderer={({label}) => <Typography css={css`font-weight: 600;`}>{label}</Typography>} cellRenderer={({rowData})=><Typography variant=\"caption\">{rowData.damage_class.name.charAt(0).toUpperCase() + rowData.damage_class.name.slice(1)}</Typography>}/>\r\n    <Column flexGrow={1} label=\"Type\" width={50} dataKey=\"type\" headerRenderer={({label}) => <Typography css={css`font-weight: 600; `}>{label}</Typography>} cellRenderer={({rowData})=> <Chip component={Typography} label={rowData.type.name.charAt(0).toUpperCase() + rowData.type.name.slice(1)} \r\n    css={css`color: white; font-size: 1em; background-color: ${typeLabelColors[rowData.type.name]}`}/>}/>\r\n</Table>\r\n      )}\r\n        </AutoSizer>\r\n        </Box>\r\n        </Grid>\r\n        </Grid>\r\n        </Box>\r\n      \r\n      </Container>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default PokemonDetailList;\r\n","import React, { useState, useEffect }  from \"react\";\r\nimport { getPokemon } from \"../services/RestServices\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {PokemonDetailList} from \"../components/PokemonDetailList\";\r\n\r\n\r\nexport function PokemonDetailContainer({forceUpdate}) {\r\n    let { id } = useParams();\r\n    const [isSubscribed, setIsSubscribed] = useState(true)\r\n    const [pokemonData, setPokemonData] = useState(null)\r\n    const initialURL = 'https://pokeapi.co/api/v2/pokemon/';\r\n\r\n\r\n    useEffect(() => {\r\n      const loadPokemonMoves = async (data) => {\r\n        let _pokemonData = await Promise.all(data.moves.map(async x => {\r\n          let pokemonRecord = await getPokemon(x.move.url)\r\n          return pokemonRecord\r\n        }))\r\n        if(isSubscribed){        \r\n          setPokemonData({\r\n            ...data,\r\n            moves_detail: [..._pokemonData]\r\n        });\r\n      }\r\n\r\n      }\r\n        async function fetchData() {\r\n          return await getPokemon(initialURL + id);\r\n        }\r\n        fetchData().then( x => {\r\n          loadPokemonMoves(x);\r\n\r\n        })\r\n        \r\n        return () => setIsSubscribed(false)\r\n      }, [id, isSubscribed]) \r\n\r\n\r\n    return (\r\n        <>\r\n            {pokemonData !== null ? (\r\n                <PokemonDetailList\r\n                    pokemon={pokemonData}\r\n                    forceUpdate={forceUpdate}>\r\n\r\n                    </PokemonDetailList>\r\n            ) : <CircularProgress />}\r\n                    \r\n        </>\r\n        \r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, useReducer } from \"react\";\r\nimport { PokemonDetailContainer } from \"../containers/PokemonDetailContainer\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport { Box, Button, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\r\n/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport {css, jsx} from '@emotion/react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport disableScroll from 'disable-scroll';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(4),\r\n      right: theme.spacing(4)\r\n  },\r\n  imgButton:{\r\n    width: 250,\r\n    height: 250,\r\n  },\r\n  dialogRoot:{\r\n    borderRadius: '2rem'\r\n  }\r\n}));\r\n\r\nconst CustomButton = withStyles((theme) => ({\r\n  root: ({value}) => ({\r\n    color: theme.palette.getContrastText(\"#F0CE00\"),\r\n    backgroundColor: \"#F0CE00\",\r\n    '&:hover': {\r\n      backgroundColor: yellow[600],\r\n    },\r\n    borderRadius: '2rem',\r\n    fontSize: '1em',\r\n    height: 70,\r\n    width: 234,\r\n    disabled: value\r\n  }),\r\n}))(Button);\r\n\r\n\r\nfunction PokemonDetail() {\r\n  const classes = useStyles();\r\n  const [open1, setOpen1] = useState(false);\r\n  const [openFailed, setOpenFailed] = useState(false);\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n  const [isActive, setActive] = useState(true);\r\n  const [btnDisabled, setBtnDisabled] = useState(true);\r\n  const inputRef = useRef(\"\");\r\n  let pokeObj = {}\r\n  const [inventory, setInventory] = useState([]);\r\n  const [_, forceUpdate] = useReducer((x) => x + 1, 0);\r\n  let timestamp = Date.now();\r\n  timestamp = new Intl.DateTimeFormat('en-US', {day: '2-digit', month: 'long', year: 'numeric', \r\n  hour: 'numeric', minute: 'numeric', hour12: false}).format(timestamp);\r\n\r\n  const handleClickOpen1 = () => {\r\n    setOpen1(true);\r\n  };\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n  const handleFailed = () => {\r\n    setOpenFailed(false);\r\n  };\r\n  \r\n  const handleSuccess = () => {\r\n    pokeObj = {\r\n      id: localStorage.getItem(\"id\"),\r\n      pokeName: localStorage.getItem(\"pokeName\"),\r\n      nickName: inputRef.current.value,\r\n      date: timestamp,\r\n      img: localStorage.getItem(\"pokeImg\")\r\n    }\r\n    setInventory( localStorage.getItem(\"inventory\") ? Object.values(JSON.parse(localStorage.getItem(\"inventory\"))).filter(ele => ele.id !== \"\").concat(pokeObj) : [pokeObj]);\r\n    inputRef.current.value = \"\";\r\n    forceUpdate();\r\n    setOpenSuccess(false);\r\n  };\r\n\r\n  const handleCatch = () => {\r\n    setActive(false);\r\n  };\r\n  useEffect(() => {\r\n    if (!isActive) {\r\n      setTimeout(function(){setActive(true); disableScroll.on();\r\n        if(Math.random() < 0.5){\r\n          setOpenSuccess(true);\r\n        } else {\r\n          setOpenFailed(true);\r\n        }\r\n      }, 1000); \r\n    }\r\n    if (open1){\r\n      setOpen1(false);\r\n    }\r\n    if(inventory.length > 0){\r\n      \r\n    \r\n      localStorage.setItem(\"inventory\", JSON.stringify(inventory));\r\n    }\r\n   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ inventory, openSuccess, isActive, disableScroll.off()]);\r\n\r\n \r\n\r\n\r\n  return (\r\n    <LoadingOverlay\r\n      active={!isActive}\r\n      spinner={<Box mb={4}><Paper elevation={0} css={css`\r\n      width:200px;\r\n      height:200px;\r\n      background: url('/tokopedia-test/img/pokeball.png') center center/cover no-repeat;`}></Paper></Box>}\r\n      text='Catching...'>\r\n      <PokemonDetailContainer forceUpdate={_}/>\r\n      <Fab onClick={handleClickOpen1} variant=\"round\" css={css`\r\n          width:100px;\r\n          height:100px;\r\n          background: url('/tokopedia-test/img/pokeball.png') center center/cover no-repeat;`} className={classes.root}>\r\n            .\r\n      </Fab>\r\n\r\n      <Dialog \r\n      classes={{paper: classes.dialogRoot}}\r\n      disableEscapeKeyDown={true}\r\n      disableBackdropClick={true}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      open={openSuccess}\r\n      fullWidth={true}>\r\n        <DialogTitle>\r\n        <Box mt={3}>\r\n        <Typography variant=\"h3\" align=\"center\" style={{ color: green[500] }}>\r\n         <CheckCircleIcon fontSize=\"large\" style={{ color: green[500] }} /> Success!\r\n        </Typography>\r\n        </Box>\r\n\r\n        <Box my={1}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Congratulations trainer! <strong>{localStorage.getItem(\"pokeName\")}</strong> is yours now\r\n        </Typography>\r\n        </Box>\r\n        <Box my={1}>\r\n        <Typography variant=\"body1\" align=\"center\" css={css`opacity: 0.8`}>\r\n          Give it the best name and make it your greatest partner!\r\n        </Typography>\r\n        </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n\r\n          <Paper\r\n            elevation={0}\r\n            css={css`\r\n              text-align: center;\r\n              border-radius: 2rem;\r\n              `}>\r\n            <img alt=\"high-res-poke-img\"\r\n              src={\r\n                localStorage.getItem(\"pokeImg\")\r\n              }\r\n              css={css`\r\n                width: 150px;\r\n                height: 150px;    \r\n                -webkit-filter: drop-shadow(5px 5px 7px rgba(0, 0, 0, 0.5));\r\n                filter: drop-shadow(5px 5px 7px rgba(0, 0, 0, 0.5));\r\n              `}\r\n            />\r\n          </Paper>    \r\n          \r\n          <Grid container direction=\"column\" alignContent=\"stretch\" justify=\"center\">\r\n            <Grid item xs={12}>\r\n          <Box my={2}>\r\n            <TextField\r\n        placeholder=\"e.g. Nakama\"\r\n        label=\"Name\"  \r\n        fullWidth\r\n        inputRef={inputRef} \r\n        onChange={(text) => (setBtnDisabled(!text.target.value))}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"/>\r\n          </Box>\r\n          </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"column\" alignContent=\"center\" justify=\"center\">\r\n            <Grid item xs={12}>\r\n              <Box mb={4}>\r\n              <CustomButton disabled={btnDisabled} onClick={handleSuccess}><Typography \r\n                css={css`\r\n                  font-weight: 800;\r\n                `}>Done</Typography></CustomButton>   \r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog \r\n      classes={{paper: classes.dialogRoot}}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      open={openFailed}\r\n      fullWidth={true}>\r\n        <DialogTitle>\r\n        <Box mt={3}>\r\n        <Typography variant=\"h3\" align=\"center\" style={{ color: red[500] }}>\r\n         <CancelIcon fontSize=\"large\" style={{ color: red[500] }} /> Failed\r\n        </Typography>\r\n          \r\n        </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box mb={8}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Oops <strong>{localStorage.getItem(\"pokeName\")}</strong> has run away, better luck next time trainer!\r\n          </Typography>\r\n          </Box>            \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"column\" alignContent=\"center\" justify=\"center\">\r\n            <Grid item xs={12}>\r\n              <Box mb={4}>\r\n              <CustomButton onClick={handleFailed}><Typography \r\n                css={css`\r\n                  font-weight: 800;\r\n                `}>Dismiss</Typography></CustomButton>   \r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n      fullWidth={true}\r\n        classes={{paper: classes.dialogRoot}}\r\n        open={open1}  \r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose1}>\r\n        <DialogTitle>\r\n          <Box my={3}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Wow.. great choice, trainer! \r\n        </Typography>\r\n          \r\n        <Typography variant=\"h5\" align=\"center\">\r\n           Ready to catch <strong>{localStorage.getItem(\"pokeName\")}</strong>?\r\n        </Typography>\r\n        </Box>\r\n        <Box my={1}>\r\n        <Typography variant=\"body1\" align=\"center\" css={css`opacity: 0.5`}>\r\n           *Probability rate is 50%\r\n        </Typography>\r\n        </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Paper\r\n            elevation={0}\r\n            css={css`\r\n              text-align: center;\r\n              border-radius: 2rem;\r\n              `}>\r\n            <img alt=\"high-res-poke\"\r\n              src={\r\n                localStorage.getItem(\"pokeImg\")\r\n              }\r\n              css={css`\r\n                width: 150px;\r\n                height: 150px;    \r\n                -webkit-filter: drop-shadow(5px 5px 7px rgba(0, 0, 0, 0.5));\r\n                filter: drop-shadow(5px 5px 7px rgba(0, 0, 0, 0.5));\r\n              `}\r\n            />\r\n          </Paper>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"column\" alignContent=\"center\" justify=\"center\">\r\n            <Grid item xs={12}>\r\n              <CustomButton onClick={handleCatch}><Typography \r\n                css={css`\r\n                  font-weight: 800;\r\n                `}>CATCH</Typography></CustomButton>   \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box mt={2} mb={4}>\r\n                  <Button onClick={handleClose1}>\r\n                    <Typography>I'll come back next time!</Typography>\r\n                  </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n  );\r\n}\r\n\r\nexport default PokemonDetail;\r\n","import React from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport {ApolloProvider} from \"@apollo/react-hooks\";\nimport './App.css';\nimport Navbar from './containers/Navbar';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Pokebag from './pages/Pokebag';\nimport PokemonDetail from './pages/PokemonDetail';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#F0CE00'\n        },\n        secondary: {\n            main: '#F0B000'\n        }\n    }\n});\n\nfunction App() {\n    const client = new ApolloClient({uri: 'https://graphql-pokeapi.vercel.app/api/graphql'});\n\n    return (\n        <ThemeProvider theme={theme}>\n        {!localStorage.getItem(\"inventory\") && localStorage.setItem(\"inventory\", JSON.stringify([{id: '',pokeName: '', nickName: '', date: '', img: ''}]))}\n            <ApolloProvider client={client}>\n                <Router>\n                    <Navbar/>\n                    <Switch>\n                        <Route path='/tokopedia-test' exact component={Home}/>\n                        <Route path='/tokopedia-test/pokebag' component={Pokebag}/>\n                        <Route path='/tokopedia-test/detail/:id/:name' component={PokemonDetail}/>\n                    </Switch>\n                </Router>\n            </ApolloProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n    \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}